{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","setInterval","setState","console","log","toLocaleTimeString","this","prevProps","oldName","name","props","clearInterval","React","Component","App","isVisible","clockName","hideShow","visible","changeClockName","random","Math","round","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MAKaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,QAAS,MAHb,uDAME,WAAqB,IAAD,OACZA,EAAwBC,aAAY,WACxC,IAAMH,EAAa,IAAIC,KAEvB,EAAKG,SAAS,CACZJ,KAAM,IAAIC,OAGZI,QAAQC,IAAIN,EAAKO,wBAChB,KAEHC,KAAKJ,SAAS,CACZF,cAlBN,gCAsBE,SAAmBO,GACjB,IAAMC,EAAUD,EAAUE,KAEtBF,EAAUE,OAASH,KAAKI,MAAMD,MAEhCN,QAAQC,IAAR,qCAA0CI,EAA1C,eAAwDF,KAAKI,MAAMD,KAAnE,QA3BN,kCA+BE,WAC6B,OAAvBH,KAAKT,MAAMG,SACbW,cAAcL,KAAKT,MAAMG,WAjC/B,oBAqCE,WACE,OACE,qDAEG,IACAM,KAAKT,MAAMC,KAAKO,qBACjB,4CAEG,IACAC,KAAKI,MAAMD,eA9CtB,GAA2BG,IAAMC,WCD3BC,G,kNACJjB,MAAQ,CACNkB,WAAW,EACXC,UAAW,G,EAGbC,SAAW,WACT,IAAMC,EAAU,EAAKrB,MAAMkB,UAE3B,EAAKb,SAAS,CAAEa,WAAYG,K,EAG9BC,gBAAkB,WAChB,IAAMC,EAASC,KAAKC,MAA6B,GAAhBD,KAAKD,SAAX,IAE3B,EAAKlB,SAAS,CAAEc,UAAWI,K,4CAG7B,WACE,IAAQL,EAAcT,KAAKT,MAAnBkB,UAER,OACE,sBAAKQ,UAAU,MAAf,UACE,6CACA,gCACIR,GAAc,cAAC,EAAD,CAAON,KAAMH,KAAKT,MAAMmB,YACxC,gCACE,wBACEQ,KAAK,SACLD,UAAU,WACVE,QAASnB,KAAKW,SAHhB,SAKIF,EAAa,YAAc,cAE/B,wBACES,KAAK,SACLD,UAAU,YACVE,QAASnB,KAAKa,gBAHhB,sC,GAlCMP,IAAMC,YAgDTC,ICjDfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.67521e6b.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number;\n};\nexport class Clock extends React.Component<Props> {\n  state = {\n    date: new Date(),\n    timerId: null,\n  };\n\n  componentDidMount() {\n    const timerId: NodeJS.Timer = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({\n        date: new Date(),\n      });\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n\n    this.setState({\n      timerId,\n    });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldName = prevProps.name;\n\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${oldName} to ${this.props.name} `);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.timerId !== null) {\n      clearInterval(this.state.timerId);\n    }\n  }\n\n  render(): React.ReactNode {\n    return (\n      <>\n        Current time:\n        {' '}\n        {this.state.date.toLocaleTimeString()}\n        <p>\n          Clock name:\n          {' '}\n          {this.props.name}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isVisible: true,\n    clockName: 0,\n  };\n\n  hideShow = () => {\n    const visible = this.state.isVisible;\n\n    this.setState({ isVisible: !visible });\n  };\n\n  changeClockName = () => {\n    const random = Math.round(-0.5 + Math.random() * 11);\n\n    this.setState({ clockName: random });\n  };\n\n  render(): React.ReactNode {\n    const { isVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div>\n          {(isVisible) && <Clock name={this.state.clockName} />}\n          <div>\n            <button\n              type=\"button\"\n              className=\"hideShow\"\n              onClick={this.hideShow}\n            >\n              {(isVisible) ? 'Hide time' : 'Show time'}\n            </button>\n            <button\n              type=\"button\"\n              className=\"clockName\"\n              onClick={this.changeClockName}\n            >\n              Change Name\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}